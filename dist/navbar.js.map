{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/.pnpm/@finsweet+ts-utils@0.39.2/node_modules/@finsweet/ts-utils/dist/helpers/simulateEvent.js", "../node_modules/.pnpm/@finsweet+ts-utils@0.39.2/node_modules/@finsweet/ts-utils/dist/webflow/closeDropdown.js", "../src/utils/navbar/setNavDropdownsReturnLink.ts", "../src/utils/navbar/setNavMenuToWindowHeight.ts", "../src/navbar.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/**\n * Dispatches a custom event that bubbles from the target.\n * @param target The element where the event will originate.\n * @param events The event name or an array of event names.\n * @returns True if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n */\nexport const simulateEvent = (target, events) => {\n    if (!Array.isArray(events))\n        events = [events];\n    const eventsSuccess = events.map((event) => target.dispatchEvent(new Event(event, { bubbles: true })));\n    return eventsSuccess.every((success) => success);\n};\n", "import { simulateEvent } from '../helpers';\n/**\n * Closes a dropdown.\n * @param dropdownToggle A {@link DropdownToggle} element.\n * @param focusToggle Defaults to `true`.\n */\nexport const closeDropdown = (dropdownToggle, focusToggle = true) => {\n    if (focusToggle)\n        dropdownToggle.focus();\n    simulateEvent(dropdownToggle, 'w-close');\n};\n", "import { closeDropdown } from '@finsweet/ts-utils';\n\n/**\n * @description - Set the return links on submenus to close dropdown\n * @param returnLinks - The return links from the dropdown submenus\n * @returns - nothing\n */\n\nexport function setNavDropdownsReturnLink(returnLinks: NodeListOf<HTMLButtonElement>) {\n  returnLinks.forEach((link) => {\n    link.addEventListener('click', (e) => {\n      const dropdown = <HTMLDivElement>link.closest('.w-dropdown');\n      if (!dropdown) return;\n      e.preventDefault();\n      closeDropdown(dropdown);\n    });\n  });\n}\n", "/**\n *\n * @param {HTMLMenuElement} menu - The navbar menu element that will fill the height of the window\n * @param {HTMLDivElement} banner - The navbar banner element that will be subtracted from the window height to set the menu height\n * @returns - nothing\n */\nexport const setNavMenuToWindowHeight = (menu: HTMLMenuElement, banner: HTMLDivElement) => {\n  menu.style.height = `${window.innerHeight - banner.clientHeight}px`;\n};\n", "import { setNavDropdownsReturnLink } from '$utils/navbar/setNavDropdownsReturnLink';\nimport { setNavMenuToWindowHeight } from '$utils/navbar/setNavMenuToWindowHeight';\n\nwindow.Webflow = window.Webflow || [];\nwindow.Webflow.push(async () => {\n  // select essential navbar elements\n  const banner = <HTMLDivElement>document.querySelector('[navbar-element=\"component\"]');\n  const menu = <HTMLMenuElement>document.querySelector('[navbar-element=\"menu\"]');\n  const toggleMenuBtn = document.querySelector('[navbar-element=\"button\"]') as HTMLButtonElement;\n  if (!banner || !menu || !toggleMenuBtn) return;\n\n  // run navbar mobile functionalities on smaller breakpoints\n  if (window.innerWidth <= 991) navbarMobile();\n\n  function navbarMobile() {\n    // get return links from menu items' dropdown submenus\n    const returnLinks: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\n      '[navbar-element=\"close-dropdown\"]'\n    );\n\n    toggleMenuBtn.addEventListener('click', () => {\n      setNavMenuToWindowHeight(menu, banner);\n\n      if (!returnLinks.length) return;\n      setNavDropdownsReturnLink(returnLinks);\n    });\n  }\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACMtF,MAAM,gBAAgB,CAAC,QAAQ,WAAW;AAC7C,QAAI,CAAC,MAAM,QAAQ,MAAM;AACrB,eAAS,CAAC,MAAM;AACpB,UAAM,gBAAgB,OAAO,IAAI,CAAC,UAAU,OAAO,cAAc,IAAI,MAAM,OAAO,EAAE,SAAS,KAAK,CAAC,CAAC,CAAC;AACrG,WAAO,cAAc,MAAM,CAAC,YAAY,OAAO;AAAA,EACnD;;;ACLO,MAAM,gBAAgB,CAAC,gBAAgB,cAAc,SAAS;AACjE,QAAI;AACA,qBAAe,MAAM;AACzB,kBAAc,gBAAgB,SAAS;AAAA,EAC3C;;;ACFO,WAAS,0BAA0B,aAA4C;AACpF,gBAAY,QAAQ,CAAC,SAAS;AAC5B,WAAK,iBAAiB,SAAS,CAAC,MAAM;AACpC,cAAM,WAA2B,KAAK,QAAQ,aAAa;AAC3D,YAAI,CAAC;AAAU;AACf,UAAE,eAAe;AACjB,sBAAc,QAAQ;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;;;ACXO,MAAM,2BAA2B,CAAC,MAAuB,WAA2B;AACzF,SAAK,MAAM,SAAS,GAAG,OAAO,cAAc,OAAO;AAAA,EACrD;;;ACLA,SAAO,UAAU,OAAO,WAAW,CAAC;AACpC,SAAO,QAAQ,KAAK,YAAY;AAE9B,UAAM,SAAyB,SAAS,cAAc,8BAA8B;AACpF,UAAM,OAAwB,SAAS,cAAc,yBAAyB;AAC9E,UAAM,gBAAgB,SAAS,cAAc,2BAA2B;AACxE,QAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AAAe;AAGxC,QAAI,OAAO,cAAc;AAAK,mBAAa;AAE3C,aAAS,eAAe;AAEtB,YAAM,cAA6C,SAAS;AAAA,QAC1D;AAAA,MACF;AAEA,oBAAc,iBAAiB,SAAS,MAAM;AAC5C,iCAAyB,MAAM,MAAM;AAErC,YAAI,CAAC,YAAY;AAAQ;AACzB,kCAA0B,WAAW;AAAA,MACvC,CAAC;AAAA,IACH;AAAA,EACF,CAAC;",
  "names": []
}
